tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint defines a Windows Server 2012 R2 VM on AWS EC2 and an elastic IP
  and a security group are also created and associated with the VM all using Cloudify's AWS plugin.
  In addition, a simple web server is created and started using Cloudify's script plugin.
  Note: This blueprint can also work with a Windows Server 2008 R2 VM on AWS EC2.
        To do so omit the single quotes in the vm user_data under the node_templates section below.


imports:
  - http://www.getcloudify.org/spec/cloudify/4.5.dev1/types.yaml
  - plugin:cloudify-awssdk-plugin

inputs:

  webserver_port:
    description: The HTTP web server port
    default: 8080

  agent_user:
    description: User name used to access the AWS EC2 VM
    default: Administrator

  key_name:
    type: string

  vpc_id:
    type: string

  subnet_id:
    type: string

dsl_definitions:

  client_config: &client_config
    aws_access_key_id: { get_secret: aws_access_key_id }
    aws_secret_access_key: { get_secret: aws_secret_access_key }
    region_name: { get_secret: ec2_region_name }

node_templates:

  ami:
    type: cloudify.nodes.aws.ec2.Image
    properties:
      resource_config:
        kwargs:
          Filters:
          - Name: name
            Values:
            - 'Windows_Server-2012-RTM-English-64Bit-Base-2018.07.11'
          - Name: owner-id
            Values:
            - '801119661308'
      client_config: *client_config

  security_group:
    type: cloudify.nodes.aws.ec2.SecurityGroup
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          GroupName: CloudifyHelloWorldBlueprint
          Description: Created by cloudify-hello-world-example.
          VpcId: { get_input: vpc_id }

  security_group_rules:
    type: cloudify.nodes.aws.ec2.SecurityGroupRuleIngress
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          IpPermissions:
          - IpProtocol: tcp
            FromPort: 5985
            ToPort: 5986
            IpRanges:
            - CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: { get_property: [ http_web_server, port ] }
            ToPort: { get_property: [ http_web_server, port ] }
            IpRanges:
            - CidrIp: 0.0.0.0/0
    relationships:
    - type: cloudify.relationships.contained_in
      target: security_group

  nic:
    type: cloudify.nodes.aws.ec2.Interface
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          Description: Created by cloudify-hello-world-example.
          SubnetId: { get_input: subnet_id }
          Groups:
          - { get_attribute: [ security_group, aws_resource_id ] }
    relationships:
    - type: cloudify.relationships.depends_on
      target: security_group

  ip:
    type: cloudify.nodes.aws.ec2.ElasticIP
    properties:
      resource_config:
        kwargs:
          Domain: 'vpc'
      client_config: *client_config
    relationships:
    - type: cloudify.relationships.depends_on
      target: nic

  vm:
    type: cloudify.nodes.aws.ec2.Instances
    properties:
      client_config: *client_config
      agent_config:
        install_method: remote
        user: { get_input: agent_user }
        key: { get_secret: agent_key_private }
        port: 5985
      os_family: windows
      use_password: true
      resource_config:
        kwargs:
          ImageId: { get_attribute: [ ami, aws_resource_id ] }
          InstanceType: t2.medium
          KeyName: { get_input: key_name }
          UserData: |
            <powershell>
            &winrm quickconfig -q
            &winrm set winrm/config              '@{MaxTimeoutms="1800000"}'
            &winrm set winrm/config/winrs        '@{MaxShellsPerUser="2147483647"}'
            &winrm set winrm/config/service      '@{AllowUnencrypted="true";MaxConcurrentOperationsPerUser="4294967295"}'
            &winrm set winrm/config/service/auth '@{Basic="true"}'
            &netsh advfirewall firewall add rule name="WinRM 5985" protocol=TCP dir=in localport=5985 action=allow
            &netsh advfirewall firewall add rule name="WinRM 5986" protocol=TCP dir=in localport=5986 action=allow
            Set-ExecutionPolicy Unrestricted -force
            </powershell>
    relationships:
    - type: cloudify.relationships.depends_on
      target: ami
    - type: cloudify.relationships.depends_on
      target: nic

  http_web_server:
    type: cloudify.nodes.WebServer
    properties:
      port: { get_input: webserver_port }
    relationships:
      - type: cloudify.relationships.contained_in
        target: vm
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/powershell/configure.ps1
          inputs:
            process:
              command_prefix: powershell
        start:
          implementation: scripts/powershell/start.ps1
          inputs:
            process:
              command_prefix: powershell
        stop:
          implementation: scripts/powershell/stop.ps1
          inputs:
            process:
              command_prefix: powershell
outputs:
  http_endpoint:
    description: Web server's external endpoint
    value: { concat: ['http://', { get_attribute: [ip, aws_resource_id] },
                      ':', { get_property: [http_web_server, port] }] }
